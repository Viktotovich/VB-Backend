// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  sessionId String @id @unique
  name      String
  User      User   @relation(fields: [userId], references: [id])
  userId    String
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  username  String    @unique
  hash      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      Role      @default(NORMAL)
  Post      Post[]
  Comment   Comment[]
  Session   Session[]

  @@index([email])
}

model Post {
  id         String     @id @default(uuid())
  title      String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  content    Json
  files      String? ///path to url
  author     User       @relation(fields: [userId], references: [id])
  authorId   String
  categories Category[]
  approved   Approval   @default(PENDING)
  userId     String
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

model Comment {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  author    User     @relation(fields: [userId], references: [id])
  authorId  String
  content   Json
  userId    String
}

enum Approval {
  PENDING
  REVIEWED
  PUBLISHED
  DENIED
}

enum Role {
  STUDENT
  NORMAL
  EDITOR
  POSTER
  ADMIN
}
